# ---------------------------------------------------------------------------
# 
# SAC Compiler Construction Framework
# 
# ---------------------------------------------------------------------------
# 
# SAC COPYRIGHT NOTICE, LICENSE, AND DISCLAIMER
# 
# (c) Copyright 1994 - 2011 by
# 
#   SAC Development Team
#   SAC Research Foundation
# 
#   http://www.sac-home.org
#   email:info@sac-home.org
# 
#   All rights reserved
# 
# ---------------------------------------------------------------------------
# 
# The SAC compiler construction framework, all accompanying 
# software and documentation (in the following named this software)
# is developed by the SAC Development Team (in the following named
# the developer) which reserves all rights on this software.
# 
# Permission to use this software is hereby granted free of charge
# exclusively for the duration and purpose of the course 
#   "Compilers and Operating Systems" 
# of the MSc programme Grid Computing at the University of Amsterdam.
# Redistribution of the software or any parts thereof as well as any
# alteration  of the software or any parts thereof other than those 
# required to use the compiler construction framework for the purpose
# of the above mentioned course are not permitted.
# 
# The developer disclaims all warranties with regard to this software,
# including all implied warranties of merchantability and fitness.  In no
# event shall the developer be liable for any special, indirect or
# consequential damages or any damages whatsoever resulting from loss of
# use, data, or profits, whether in an action of contract, negligence, or
# other tortuous action, arising out of or in connection with the use or
# performance of this software. The entire risk as to the quality and
# performance of this software is with you. Should this software prove
# defective, you assume the cost of all servicing, repair, or correction.
# 
# ---------------------------------------------------------------------------
# 



#######################################################################################
#
# automatic dependency updating mechanism:
#   gmake implicitly remakes all files that are included!
#

DEPS = $(patsubst %.c,.%.d, $(wildcard *.c))

ifeq ($(CHECK_DEPS),yes)
  ifneq ($(DEPS),)
   -include $(DEPS)
  endif
endif


YACC_H_FILES   := $(patsubst %.y, y.tab.h, $(wildcard *.y))

#
# files for xml processing. the makefile for that files 
# either generates them (if new ast in use) or generates
# empty files
#
# XSL_FILES      := $(wildcard $(PROJECT_ROOT)/src/xml/*_h.xsl)
# XML_FILES      := $(wildcard $(PROJECT_ROOT)/src/xml/*.xml)
XSL_FILES      := $(wildcard *_h.xsl)
XML_FILES      := $(wildcard *.xml)

#
# $(YACC_H_FILES) might be included by any .c files.
# Therefore, bison has to be run before any dependency
# is generated!
# similar to YACC_H_FILES, the files generated from the XML_FILES (by the
# scripts in XSL_FILES) might be included by any .c file.
# Thus, these have to be generated prior to generating the dependencies.
#
.%.d: %.c $(YACC_H_FILES) $(XML_FILES) $(XSL_FILES) $(PROJECT_ROOT)/tools/bin/cb
	$(MAKE) -C $(PROJECT_ROOT)/src/xml
	@$(ECHO) "  Checking dependencies of $<"
	@if $(CC) $(CCDEPS_FLAGS) $(CFLAGS) $(INCS) $<  > $@d ; \
	 then sed 's/\($*\)\.o[ :]*/$*\.o $@\: $$\(PROJECT_ROOT\)\/Makefile.Config /'  <$@d >$@; \
	      $(RM) $@d ; \
	 else $(RM) $@d ; \
	      exit 1 ;  \
	 fi
	@$(CLOCK_SKEW_ELIMINATION) $@

$(PROJECT_ROOT)/tools/bin/cb: 
	$(MAKE) -C $(PROJECT_ROOT)/tools/src/code_beautifier
	
